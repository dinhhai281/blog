{"version":3,"sources":["webpack:///./src/components/blog-item.tsx","webpack:///./src/pages/index.tsx"],"names":["BlogItem","source","frontmatter","excerpt","useIntl","locale","formatMessage","className","to","path","title","dayjs","date","format","id","query","Home","data","useEffect","changeLocale","handleAvatarClick","useCallback","window","open","site","siteMetadata","githubUrl","src","allGithubData","edges","node","viewer","avatarUrl","onClick","href","rel","target","name","allMarkdownRemark","sort","a","b","map","Date","parse","reduce","acc","cur","key"],"mappings":"8OAkCeA,EAjBqB,SAAC,GAAyC,QAAvCC,OAAUC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,QAAgB,EAC1CC,oBAA1BC,EADoE,EACpEA,OAAQC,EAD4D,EAC5DA,cAChB,OACE,yBAAKC,UAAU,oBACb,kBAAC,OAAD,CAAMA,UAAU,uCAAuCC,GAAE,IAAMH,EAASH,EAAYO,MACjFP,EAAYQ,OAEf,yBAAKH,UAAU,yCACZI,IAAMT,EAAYU,MAChBP,OAAOA,GACPQ,OAAOP,EAAc,CAAEQ,GAAI,kBAEhC,yBAAKP,UAAU,QAAQJ,K,YCwEhBY,GAFEC,UApDa,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAAW,EACNb,oBAA1BE,EADgC,EAChCA,cAAeD,EADiB,EACjBA,OACvBa,qBAAU,WACRC,uBAAad,KACZ,CAACA,IAEJ,IAAMe,EAAoBC,uBAAY,WACpCC,OAAOC,KAAKN,EAAKO,KAAKC,aAAaC,UAAW,YAC7C,IAEH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,6BAASnB,UAAU,QACjB,yBAAKA,UAAU,0BACb,yBACEA,UAAU,gDACVoB,IAAKV,EAAKW,cAAcC,MAAM,GAAGC,KAAKb,KAAKc,OAAOC,UAClDC,QAASb,KAGb,yBAAKb,UAAU,qCACb,6BACGD,EAAc,CAAEQ,GAAI,eADvB,IAGE,uBACEoB,KAAMjB,EAAKO,KAAKC,aAAaC,UAC7BS,IAAI,aACJC,OAAO,SACP7B,UAAU,2BAETU,EAAKW,cAAcC,MAAM,GAAGC,KAAKb,KAAKc,OAAOM,OAGlD,6BAAM/B,EAAc,CAAEQ,GAAI,kBAG9B,6BAASP,UAAU,yBAChBU,EAAKqB,kBAAkBT,MACrBU,MAAK,SAACC,EAAGC,GAAJ,MACJ,CAACD,EAAEV,KAAK5B,YAAYU,KAAM6B,EAAEX,KAAK5B,YAAYU,MAAM8B,IAAIC,KAAKC,OAAOC,QAAO,SAACC,EAAKC,GAAN,OAAcA,EAAMD,QAE/FJ,KAAI,gBAAGZ,EAAH,EAAGA,KAAH,OACH,yBAAKkB,IAAKlB,EAAKhB,GAAIP,UAAU,QAC3B,kBAAC,EAAD,CAAUN,OAAQ6B,WAUX","file":"component---src-pages-index-tsx-14332d9c7a35fcc7ccfe.js","sourcesContent":["import React, { FC } from 'react';\nimport { Link } from 'gatsby';\nimport { useIntl } from 'gatsby-plugin-intl';\nimport dayjs from 'dayjs';\n\nexport interface BlogItemProps {\n  source: {\n    id: string;\n    frontmatter: {\n      date: string;\n      path: string;\n      title: string;\n    };\n    excerpt: string;\n  };\n}\n\nconst BlogItem: FC<BlogItemProps> = ({ source: { frontmatter, excerpt } }) => {\n  const { locale, formatMessage } = useIntl();\n  return (\n    <div className='grid grid-cols-1'>\n      <Link className='text-pink-700 text-2xl font-semibold' to={`/${locale}${frontmatter.path}`}>\n        {frontmatter.title}\n      </Link>\n      <div className='text-sm text-pink-700 text-opacity-75'>\n        {dayjs(frontmatter.date)\n          .locale(locale)\n          .format(formatMessage({ id: 'date_format' }))}\n      </div>\n      <div className='pt-3'>{excerpt}</div>\n    </div>\n  );\n};\n\nexport default BlogItem;\n","import Layout from '@components/layout';\nimport { graphql } from 'gatsby';\nimport { changeLocale, useIntl } from 'gatsby-plugin-intl';\nimport React, { FC, useEffect, useCallback } from 'react';\nimport BlogItem from '@components/blog-item';\nimport SEO from '@components/seo';\n\nexport interface HomeProps {\n  data: {\n    site: {\n      siteMetadata: {\n        author: string;\n        githubUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          id: string;\n          excerpt: string;\n          frontmatter: {\n            date: string;\n            path: string;\n            title: string;\n          };\n        };\n      }[];\n    };\n    allGithubData: {\n      edges: {\n        node: {\n          data: {\n            viewer: {\n              name: string;\n              avatarUrl: string;\n            };\n          };\n        };\n      }[];\n    };\n  };\n}\n\ntype SiteData = Pick<HomeProps['data'], 'site'>['site'];\ntype AllMarkdownRemark = Pick<HomeProps['data'], 'allMarkdownRemark'>['allMarkdownRemark'];\ntype AllGithubData = Pick<HomeProps['data'], 'allGithubData'>['allGithubData'];\n\nconst Home: FC<HomeProps> = ({ data }) => {\n  const { formatMessage, locale } = useIntl();\n  useEffect(() => {\n    changeLocale(locale);\n  }, [locale]);\n\n  const handleAvatarClick = useCallback(() => {\n    window.open(data.site.siteMetadata.githubUrl, '_blank');\n  }, []);\n\n  return (\n    <Layout>\n      <SEO />\n      <section className='flex'>\n        <div className='flex items-center pr-2'>\n          <img\n            className='p-0 m-0 w-12 h-12 rounded-full cursor-pointer'\n            src={data.allGithubData.edges[0].node.data.viewer.avatarUrl}\n            onClick={handleAvatarClick}\n          />\n        </div>\n        <div className='pl-2 grid grid-cols-1 grid-rows-2'>\n          <div>\n            {formatMessage({ id: 'headline_1' })}\n            &nbsp;\n            <a\n              href={data.site.siteMetadata.githubUrl}\n              rel='noreferrer'\n              target='_blank'\n              className='underline text-pink-700'\n            >\n              {data.allGithubData.edges[0].node.data.viewer.name}\n            </a>\n          </div>\n          <div>{formatMessage({ id: 'headline_2' })}</div>\n        </div>\n      </section>\n      <section className='grid grid-cols-1 mt-6'>\n        {data.allMarkdownRemark.edges\n          .sort((a, b) =>\n            [a.node.frontmatter.date, b.node.frontmatter.date].map(Date.parse).reduce((acc, cur) => cur - acc)\n          )\n          .map(({ node }) => (\n            <div key={node.id} className='mb-6'>\n              <BlogItem source={node} />\n            </div>\n          ))}\n      </section>\n    </Layout>\n  );\n};\n\nexport default Home;\n\nexport const query = graphql`\n  query {\n    allGithubData {\n      edges {\n        node {\n          data {\n            viewer {\n              avatarUrl\n              email\n              login\n              name\n            }\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        author\n        githubUrl\n      }\n    }\n\n    allMarkdownRemark(filter: {}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date\n            path\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}